version: '3'
services:
  mysql-e2e-tests:
    depends_on:
      - mock-fxa-server
      - syncserver
    image: app:build
    privileged: true
    user: root
    environment:
      MOCK_FXA_SERVER_URL: http://mock-fxa-server:6000
      SYNC_HOST: 0.0.0.0
      SYNC_MASTER_SECRET: secret0
      SYNC_TOKENSERVER__DATABASE_URL: mysql://test:test@tokenserver-db:3306/tokenserver
      SYNC_TOKENSERVER__ENABLED: "true"
      SYNC_TOKENSERVER__FXA_BROWSERID_AUDIENCE: "https://token.stage.mozaws.net/"
      SYNC_TOKENSERVER__FXA_BROWSERID_ISSUER: "api-accounts.stage.mozaws.net"
      SYNC_TOKENSERVER__FXA_EMAIL_DOMAIN: api-accounts.stage.mozaws.net
      SYNC_TOKENSERVER__FXA_METRICS_HASH_SECRET: secret0
      SYNC_TOKENSERVER__RUN_MIGRATIONS: "true"
      SYNC_TOKENSERVER__FXA_OAUTH_PRIMARY_JWK__KTY: "RSA"
      SYNC_TOKENSERVER__FXA_OAUTH_PRIMARY_JWK__ALG: "RS256"
      SYNC_TOKENSERVER__FXA_OAUTH_PRIMARY_JWK__KID: "20190730-15e473fd"
      SYNC_TOKENSERVER__FXA_OAUTH_PRIMARY_JWK__FXA_CREATED_AT: "1564502400"
      SYNC_TOKENSERVER__FXA_OAUTH_PRIMARY_JWK__USE: "sig"
      SYNC_TOKENSERVER__FXA_OAUTH_PRIMARY_JWK__N: "15OpVGC7ws_SlU0gRbRh1Iwo8_gR8ElX2CDnbN5blKyXLg-ll0ogktoDXc-tDvTabRTxi7AXU0wWQ247odhHT47y5uz0GASYXdfPponynQ_xR9CpNn1eEL1gvDhQN9rfPIzfncl8FUi9V4WMd5f600QC81yDw9dX-Z8gdkru0aDaoEKF9-wU2TqrCNcQdiJCX9BISotjz_9cmGwKXFEekQNJWBeRQxH2bUmgwUK0HaqwW9WbYOs-zstNXXWFsgK9fbDQqQeGehXLZM4Cy5Mgl_iuSvnT3rLzPo2BmlxMLUvRqBx3_v8BTtwmNGA0v9O0FJS_mnDq0Iue0Dz8BssQCQ"
      SYNC_TOKENSERVER__FXA_OAUTH_PRIMARY_JWK__E: "AQAB"
      TOKENSERVER_HOST: http://localhost:8000
    entrypoint: >
      /bin/sh -c "
        sleep 28; python3 /app/tools/integration_tests/run.py 'http://localhost:8000#secret0'
      "
  sync-db:
    image: mysql:5.7
    volumes:
      - sync_db_data:/var/lib/mysql
    restart: always
    ports:
      - "3306"
    environment:
      #MYSQL_RANDOM_ROOT_PASSWORD: yes
      MYSQL_ROOT_PASSWORD: random
      MYSQL_DATABASE: syncstorage
      MYSQL_USER: test
      MYSQL_PASSWORD: test

  tokenserver-db:
    image: mysql:5.7
    volumes:
      - tokenserver_db_data:/var/lib/mysql
    restart: always
    ports:
      - "3306"
    environment:
      #MYSQL_RANDOM_ROOT_PASSWORD: yes
      MYSQL_ROOT_PASSWORD: random
      MYSQL_DATABASE: tokenserver
      MYSQL_USER: test
      MYSQL_PASSWORD: test

  mock-fxa-server:
    image: app:build
    restart: "no"
    entrypoint: python3 /app/tools/integration_tests/tokenserver/mock_fxa_server.py
    environment:
      MOCK_FXA_SERVER_HOST: 0.0.0.0
      MOCK_FXA_SERVER_PORT: 6000

  syncserver:
    # NOTE: The naming in the rest of this repository has been updated to reflect the fact
    # that Syncstorage and Tokenserver are now part of one repository/server called
    # "Syncserver" (updated from "syncstorage-rs"). We keep the legacy naming below for
    # backwards compatibility with previous Docker images.
    image: ${SYNCSTORAGE_RS_IMAGE:-syncstorage-rs:latest}
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - sync-db
      - tokenserver-db
    environment:
      SYNC_HOST: 0.0.0.0
      SYNC_MASTER_SECRET: secret0
      SYNC_SYNCSTORAGE__DATABASE_URL: mysql://test:test@sync-db:3306/syncstorage
      SYNC_TOKENSERVER__DATABASE_URL: mysql://test:test@tokenserver-db:3306/tokenserver
      SYNC_TOKENSERVER__RUN_MIGRATIONS: "true"
    # TODO: either syncserver should retry the db connection
    # itself a few times or should include a wait-for-it.sh script
    # inside its docker that would do this for us.
    entrypoint: >
      /bin/sh -c "
        sleep 15;
        /app/bin/syncserver;
      "

volumes:
  sync_db_data:
  tokenserver_db_data:
